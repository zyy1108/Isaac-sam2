// Generated by gencpp from file img_seg/Segment.msg
// DO NOT EDIT!


#ifndef IMG_SEG_MESSAGE_SEGMENT_H
#define IMG_SEG_MESSAGE_SEGMENT_H

#include <ros/service_traits.h>


#include <img_seg/SegmentRequest.h>
#include <img_seg/SegmentResponse.h>


namespace img_seg
{

struct Segment
{

typedef SegmentRequest Request;
typedef SegmentResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Segment
} // namespace img_seg


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::img_seg::Segment > {
  static const char* value()
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const ::img_seg::Segment&) { return value(); }
};

template<>
struct DataType< ::img_seg::Segment > {
  static const char* value()
  {
    return "img_seg/Segment";
  }

  static const char* value(const ::img_seg::Segment&) { return value(); }
};


// service_traits::MD5Sum< ::img_seg::SegmentRequest> should match
// service_traits::MD5Sum< ::img_seg::Segment >
template<>
struct MD5Sum< ::img_seg::SegmentRequest>
{
  static const char* value()
  {
    return MD5Sum< ::img_seg::Segment >::value();
  }
  static const char* value(const ::img_seg::SegmentRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::img_seg::SegmentRequest> should match
// service_traits::DataType< ::img_seg::Segment >
template<>
struct DataType< ::img_seg::SegmentRequest>
{
  static const char* value()
  {
    return DataType< ::img_seg::Segment >::value();
  }
  static const char* value(const ::img_seg::SegmentRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::img_seg::SegmentResponse> should match
// service_traits::MD5Sum< ::img_seg::Segment >
template<>
struct MD5Sum< ::img_seg::SegmentResponse>
{
  static const char* value()
  {
    return MD5Sum< ::img_seg::Segment >::value();
  }
  static const char* value(const ::img_seg::SegmentResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::img_seg::SegmentResponse> should match
// service_traits::DataType< ::img_seg::Segment >
template<>
struct DataType< ::img_seg::SegmentResponse>
{
  static const char* value()
  {
    return DataType< ::img_seg::Segment >::value();
  }
  static const char* value(const ::img_seg::SegmentResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // IMG_SEG_MESSAGE_SEGMENT_H
